Descreva a importância de cada comando no Dockerfile:

O comando FROM é uma das instruções mais importantes em um Dockerfile, pois define a imagem base a partir da qual o Docker irá construir a imagem. No caso do Dockerfile apresentado, está sendo utilizada a imagem alpine, que é uma distribuição Linux minimalista. Essa escolha é significativa porque, ao utilizar uma base tão leve e otimizada, a imagem final construída será menor em tamanho, já que o alpine contém apenas o básico necessário. Isso ajuda a manter o contêiner enxuto e eficiente, sendo ideal para cenários em que não são necessárias muitas dependências ou ferramentas do sistema operacional.

O comando CMD define o comando padrão que será executado quando o contêiner for iniciado. No exemplo, o CMD especifica que o contêiner deve rodar o comando echo com o argumento "Hello Docker!", ou seja, ele imprimirá a mensagem "Hello Docker!" no terminal sempre que o contêiner for executado. Esse comando é importante porque define o comportamento padrão do contêiner ao ser iniciado com o docker run. Caso não seja fornecido um comando específico durante a execução do contêiner, o CMD será o comando executado automaticamente. Além disso, o comando CMD pode ser sobrescrito durante a execução do contêiner. Por exemplo, ao rodar docker run hello-docker ls, o comando ls seria executado no lugar do echo.

O uso do FROM e do CMD juntos define tanto a imagem base quanto o comportamento padrão do contêiner. Enquanto o FROM estabelece o ambiente no qual a aplicação vai rodar, o CMD especifica o comando que será executado quando o contêiner for iniciado. Esses são os comandos fundamentais para criar um Dockerfile simples, mas, dependendo da aplicação, podem ser adicionados outros comandos como RUN, COPY ou WORKDIR para expandir a funcionalidade e a configuração do contêiner.